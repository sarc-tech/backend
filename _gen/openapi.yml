openapi: 3.0.3
info:
  title: Система координации поиска и спасения (SARC) - OpenAPI 3.0
  description: |-
    Пример описания схемы MVP
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.15
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://d5drbh6fis58kjvm332b.g3ab4gln.apigw.yandexcloud.net
  - url: http://localhost:8082
security:
  - bearerAuth: []
tags:
  - name: statuses
    description: Работа со статусами заявок
  - name: incidents
    description: Работа с заявками
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: users
    description: работа с пользователями
paths:
  /statuses:
    x-ogen-operation-group: Statuses
    put:
      tags:
        - statuses
      summary: Обновление существующего статуса
      description: Update an existing status by Id
      operationId: updateStatus
      requestBody:
        description: Update an existent status in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Ошибочный ID статуса
        '404':
          description: Статус не найден
        '422':
          description: Validation exception
    post:
      tags:
        - statuses
      summary: добавление новой заявки
      description: Add a new status
      operationId: addStatus
      requestBody:
        description: Add a new status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      tags:
        - statuses
      summary: получение списка заявок
      description: list of statuses
      operationId: getStatuses
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatususResponse'
        '400':
          description: Invalid value
  /statuses/{statusId}:
    x-ogen-operation-group: Statuses
    get:
      tags:
        - statuses
      summary: получение заявки по id
      description: Returns a single incidents
      operationId: getStatusById
      parameters:
        - name: statusId
          in: path
          description: ID of Status to return
          required: true
          schema:
            type: string
            description: status id
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Invalid ID
        '404':
          description: Incidents not found

    delete:
      tags:
        - statuses
      summary: Deletes an status
      description: delete an status
      operationId: deleteStatus
      parameters:
        - name: statusId
          in: path
          description: request id to delete
          required: true
          schema:
            type: string
            description: status id
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid value
  /incidents:
    x-ogen-operation-group: Incidents
    put:
      tags:
        - incidents
      summary: Обновление существующей заявки
      description: Update an existing incidents by Id
      operationId: updateIncidents
      requestBody:
        description: Update an existent incidents in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Incident'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Incident'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
        '400':
          description: Ошибочный ID заявки
        '404':
          description: Заявка не найдена
        '422':
          description: Validation exception
    post:
      tags:
        - incidents
      summary: добавление новой заявки
      description: Add a new incidents
      operationId: addIncidents
      requestBody:
        description: Add a new incidents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Incident'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Incident'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
    get:
      tags:
        - incidents
      summary: получение списка заявок
      description: list of incidents
      operationId: getIncidents
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentsResponse'
        '400':
          description: Invalid value
  /incidents/{incidentId}:
    x-ogen-operation-group: Incidents
    get:
      tags:
        - incidents
      summary: получение заявки по id
      description: Returns a single incidents
      operationId: getIncidentById
      parameters:
        - name: incidentId
          in: path
          description: ID of Incidents to return
          required: true
          schema:
            type: string
            description: incident id
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
        '400':
          description: Invalid ID
        '404':
          description: Incidents not found

    delete:
      tags:
        - incidents
      summary: Deletes an incidents
      description: delete an incidents
      operationId: deleteIncident
      parameters:
        - name: incidentId
          in: path
          description: request id to delete
          required: true
          schema:
            type: string
            description: incident id
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid value
  /user:
    x-ogen-operation-group: Users
    get:
      tags:
        - users
      summary: получение пользователя
      description: Returns a user
      operationId: getUser
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid user
        '404':
          description: user not found
  /users:
    x-ogen-operation-group: Users
    get:
      tags:
        - users
      summary: получение списка пользователей
      description: Returns a users
      operationId: getUsers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '400':
          description: Invalid user
        '404':
          description: user not found
  /checkuser/{token}:
    x-ogen-operation-group: Users
    post:
      security: []
      tags:
        - users
      summary: Получение токена
      description: Returns a user
      operationId: CheckUser
      parameters:
        - name: token
          in: path
          description: token of yandex
          required: true
          schema:
            type: string
            description: token
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid user
        '404':
          description: user not found
  /logout:
    x-ogen-operation-group: Users
    post:
      tags:
        - users
      summary: Выход из акаунта
      description: Удаляет сессию пользователя
      operationId: Logout
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid param
        '404':
          description: check error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Status:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          example: 123
          description: status id
        name:
          type: string
          example: Новая
    StatususResponse:
      required:
        - trackingId
        - status
        - data
      type: object
      properties:
        trackingId:
          type: string
        status:
          type: string
          default: Ok
        data:
          type: array
          items:
            $ref: "#/components/schemas/Status"
    Incident:
      required:
        - id
        - region
        - fio
        - statusId
        - date
      type: object
      properties:
        id:
          type: string
          example: 123
          description: incident id
        region:
          type: string
          example: Московская обл.
        fio:
          type: string
          example: Иванов Иван Иванович
        statusId:
          type: string
          example: 123
        date:
          type: string
          format: DateTime
          example: '2024-12-19T17:01:39.000Z'
    User:
      required:
        - id
        - yandexId
        - name
        - approval
        - role
      type: object
      properties:
        id:
          type: string
          example: 123
          description: user id
        yandexId:
          type: string
          example: 123
          description: yandex id
        surname:
          type: string
          example: Иванов
        name:
          type: string
          example: Иван
        patronymic:
          type: string
          example: Иванович
        callSign:
          type: string
          example: Борзый
        gender:
          type: string
          example: female
        birthdate:
          type: string
          format: date
          example: '2022-02-22'
        vk:
          type: string
          example:
        telegram:
          type: string
          example:
        email:
          type: string
          example:
        phone:
          type: string
          example:
        approval:
          type: boolean
        role:
          type: string
          example: Admin
    UsersResponse:
      required:
        - trackingId
        - status
        - data
      type: object
      properties:
        trackingId:
          type: string
        status:
          type: string
          default: Ok
        data:
          type: array
          items:
            $ref: "#/components/schemas/User"
    IncidentsResponse:
      required:
        - trackingId
        - status
        - data
      type: object
      properties:
        trackingId:
          type: string
        status:
          type: string
          default: Ok
        data:
          type: array
          items:
            $ref: "#/components/schemas/Incident"
        statuses:
          type: array
          items:
            $ref: "#/components/schemas/Status"