// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"time"
)

type AddIncidentsApplicationJSON Incident

func (*AddIncidentsApplicationJSON) addIncidentsReq() {}

type AddIncidentsApplicationXWwwFormUrlencoded Incident

func (*AddIncidentsApplicationXWwwFormUrlencoded) addIncidentsReq() {}

// AddIncidentsBadRequest is response for AddIncidents operation.
type AddIncidentsBadRequest struct{}

func (*AddIncidentsBadRequest) addIncidentsRes() {}

// AddIncidentsUnprocessableEntity is response for AddIncidents operation.
type AddIncidentsUnprocessableEntity struct{}

func (*AddIncidentsUnprocessableEntity) addIncidentsRes() {}

type AddStatusApplicationJSON Status

func (*AddStatusApplicationJSON) addStatusReq() {}

type AddStatusApplicationXWwwFormUrlencoded Status

func (*AddStatusApplicationXWwwFormUrlencoded) addStatusReq() {}

// AddStatusBadRequest is response for AddStatus operation.
type AddStatusBadRequest struct{}

func (*AddStatusBadRequest) addStatusRes() {}

// AddStatusUnprocessableEntity is response for AddStatus operation.
type AddStatusUnprocessableEntity struct{}

func (*AddStatusUnprocessableEntity) addStatusRes() {}

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// CheckUserBadRequest is response for CheckUser operation.
type CheckUserBadRequest struct{}

func (*CheckUserBadRequest) checkUserRes() {}

// CheckUserNotFound is response for CheckUser operation.
type CheckUserNotFound struct{}

func (*CheckUserNotFound) checkUserRes() {}

// DeleteIncidentBadRequest is response for DeleteIncident operation.
type DeleteIncidentBadRequest struct{}

func (*DeleteIncidentBadRequest) deleteIncidentRes() {}

// DeleteIncidentOK is response for DeleteIncident operation.
type DeleteIncidentOK struct{}

func (*DeleteIncidentOK) deleteIncidentRes() {}

// DeleteStatusBadRequest is response for DeleteStatus operation.
type DeleteStatusBadRequest struct{}

func (*DeleteStatusBadRequest) deleteStatusRes() {}

// DeleteStatusOK is response for DeleteStatus operation.
type DeleteStatusOK struct{}

func (*DeleteStatusOK) deleteStatusRes() {}

// GetIncidentByIdBadRequest is response for GetIncidentById operation.
type GetIncidentByIdBadRequest struct{}

func (*GetIncidentByIdBadRequest) getIncidentByIdRes() {}

// GetIncidentByIdNotFound is response for GetIncidentById operation.
type GetIncidentByIdNotFound struct{}

func (*GetIncidentByIdNotFound) getIncidentByIdRes() {}

// GetIncidentsBadRequest is response for GetIncidents operation.
type GetIncidentsBadRequest struct{}

func (*GetIncidentsBadRequest) getIncidentsRes() {}

// GetStatusByIdBadRequest is response for GetStatusById operation.
type GetStatusByIdBadRequest struct{}

func (*GetStatusByIdBadRequest) getStatusByIdRes() {}

// GetStatusByIdNotFound is response for GetStatusById operation.
type GetStatusByIdNotFound struct{}

func (*GetStatusByIdNotFound) getStatusByIdRes() {}

// GetStatusesBadRequest is response for GetStatuses operation.
type GetStatusesBadRequest struct{}

func (*GetStatusesBadRequest) getStatusesRes() {}

// GetUserBadRequest is response for GetUser operation.
type GetUserBadRequest struct{}

func (*GetUserBadRequest) getUserRes() {}

// GetUserByIdBadRequest is response for GetUserById operation.
type GetUserByIdBadRequest struct{}

func (*GetUserByIdBadRequest) getUserByIdRes() {}

// GetUserByIdNotFound is response for GetUserById operation.
type GetUserByIdNotFound struct{}

func (*GetUserByIdNotFound) getUserByIdRes() {}

// GetUserNotFound is response for GetUser operation.
type GetUserNotFound struct{}

func (*GetUserNotFound) getUserRes() {}

// GetUsersBadRequest is response for GetUsers operation.
type GetUsersBadRequest struct{}

func (*GetUsersBadRequest) getUsersRes() {}

// GetUsersNotFound is response for GetUsers operation.
type GetUsersNotFound struct{}

func (*GetUsersNotFound) getUsersRes() {}

// Ref: #/components/schemas/Incident
type Incident struct {
	// Incident id.
	ID       string `json:"id"`
	Region   string `json:"region"`
	Fio      string `json:"fio"`
	StatusId string `json:"statusId"`
	Date     string `json:"date"`
}

// GetID returns the value of ID.
func (s *Incident) GetID() string {
	return s.ID
}

// GetRegion returns the value of Region.
func (s *Incident) GetRegion() string {
	return s.Region
}

// GetFio returns the value of Fio.
func (s *Incident) GetFio() string {
	return s.Fio
}

// GetStatusId returns the value of StatusId.
func (s *Incident) GetStatusId() string {
	return s.StatusId
}

// GetDate returns the value of Date.
func (s *Incident) GetDate() string {
	return s.Date
}

// SetID sets the value of ID.
func (s *Incident) SetID(val string) {
	s.ID = val
}

// SetRegion sets the value of Region.
func (s *Incident) SetRegion(val string) {
	s.Region = val
}

// SetFio sets the value of Fio.
func (s *Incident) SetFio(val string) {
	s.Fio = val
}

// SetStatusId sets the value of StatusId.
func (s *Incident) SetStatusId(val string) {
	s.StatusId = val
}

// SetDate sets the value of Date.
func (s *Incident) SetDate(val string) {
	s.Date = val
}

func (*Incident) addIncidentsRes()    {}
func (*Incident) getIncidentByIdRes() {}
func (*Incident) updateIncidentsRes() {}

// Ref: #/components/schemas/IncidentsResponse
type IncidentsResponse struct {
	TrackingId string     `json:"trackingId"`
	Status     string     `json:"status"`
	Data       []Incident `json:"data"`
	Statuses   []Status   `json:"statuses"`
}

// GetTrackingId returns the value of TrackingId.
func (s *IncidentsResponse) GetTrackingId() string {
	return s.TrackingId
}

// GetStatus returns the value of Status.
func (s *IncidentsResponse) GetStatus() string {
	return s.Status
}

// GetData returns the value of Data.
func (s *IncidentsResponse) GetData() []Incident {
	return s.Data
}

// GetStatuses returns the value of Statuses.
func (s *IncidentsResponse) GetStatuses() []Status {
	return s.Statuses
}

// SetTrackingId sets the value of TrackingId.
func (s *IncidentsResponse) SetTrackingId(val string) {
	s.TrackingId = val
}

// SetStatus sets the value of Status.
func (s *IncidentsResponse) SetStatus(val string) {
	s.Status = val
}

// SetData sets the value of Data.
func (s *IncidentsResponse) SetData(val []Incident) {
	s.Data = val
}

// SetStatuses sets the value of Statuses.
func (s *IncidentsResponse) SetStatuses(val []Status) {
	s.Statuses = val
}

func (*IncidentsResponse) getIncidentsRes() {}

// LogoutBadRequest is response for Logout operation.
type LogoutBadRequest struct{}

func (*LogoutBadRequest) logoutRes() {}

// LogoutNotFound is response for Logout operation.
type LogoutNotFound struct{}

func (*LogoutNotFound) logoutRes() {}

// LogoutOK is response for Logout operation.
type LogoutOK struct{}

func (*LogoutOK) logoutRes() {}

// NewOptDate returns new OptDate with value set to v.
func NewOptDate(v time.Time) OptDate {
	return OptDate{
		Value: v,
		Set:   true,
	}
}

// OptDate is optional time.Time.
type OptDate struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDate was set.
func (o OptDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDate) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDate) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDate) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDate) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Status
type Status struct {
	// Status id.
	ID   string `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *Status) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *Status) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *Status) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Status) SetName(val string) {
	s.Name = val
}

func (*Status) addStatusRes()     {}
func (*Status) getStatusByIdRes() {}
func (*Status) updateStatusRes()  {}

// Ref: #/components/schemas/StatususResponse
type StatususResponse struct {
	TrackingId string   `json:"trackingId"`
	Status     string   `json:"status"`
	Data       []Status `json:"data"`
}

// GetTrackingId returns the value of TrackingId.
func (s *StatususResponse) GetTrackingId() string {
	return s.TrackingId
}

// GetStatus returns the value of Status.
func (s *StatususResponse) GetStatus() string {
	return s.Status
}

// GetData returns the value of Data.
func (s *StatususResponse) GetData() []Status {
	return s.Data
}

// SetTrackingId sets the value of TrackingId.
func (s *StatususResponse) SetTrackingId(val string) {
	s.TrackingId = val
}

// SetStatus sets the value of Status.
func (s *StatususResponse) SetStatus(val string) {
	s.Status = val
}

// SetData sets the value of Data.
func (s *StatususResponse) SetData(val []Status) {
	s.Data = val
}

func (*StatususResponse) getStatusesRes() {}

type UpdateIncidentsApplicationJSON Incident

func (*UpdateIncidentsApplicationJSON) updateIncidentsReq() {}

type UpdateIncidentsApplicationXWwwFormUrlencoded Incident

func (*UpdateIncidentsApplicationXWwwFormUrlencoded) updateIncidentsReq() {}

// UpdateIncidentsBadRequest is response for UpdateIncidents operation.
type UpdateIncidentsBadRequest struct{}

func (*UpdateIncidentsBadRequest) updateIncidentsRes() {}

// UpdateIncidentsNotFound is response for UpdateIncidents operation.
type UpdateIncidentsNotFound struct{}

func (*UpdateIncidentsNotFound) updateIncidentsRes() {}

// UpdateIncidentsUnprocessableEntity is response for UpdateIncidents operation.
type UpdateIncidentsUnprocessableEntity struct{}

func (*UpdateIncidentsUnprocessableEntity) updateIncidentsRes() {}

type UpdateStatusApplicationJSON Status

func (*UpdateStatusApplicationJSON) updateStatusReq() {}

type UpdateStatusApplicationXWwwFormUrlencoded Status

func (*UpdateStatusApplicationXWwwFormUrlencoded) updateStatusReq() {}

// UpdateStatusBadRequest is response for UpdateStatus operation.
type UpdateStatusBadRequest struct{}

func (*UpdateStatusBadRequest) updateStatusRes() {}

// UpdateStatusNotFound is response for UpdateStatus operation.
type UpdateStatusNotFound struct{}

func (*UpdateStatusNotFound) updateStatusRes() {}

// UpdateStatusUnprocessableEntity is response for UpdateStatus operation.
type UpdateStatusUnprocessableEntity struct{}

func (*UpdateStatusUnprocessableEntity) updateStatusRes() {}

// UpdateUserBadRequest is response for UpdateUser operation.
type UpdateUserBadRequest struct{}

func (*UpdateUserBadRequest) updateUserRes() {}

// UpdateUserNotFound is response for UpdateUser operation.
type UpdateUserNotFound struct{}

func (*UpdateUserNotFound) updateUserRes() {}

// Ref: #/components/schemas/User
type User struct {
	// User id.
	ID string `json:"id"`
	// Yandex id.
	YandexId   string    `json:"yandexId"`
	Surname    OptString `json:"surname"`
	Name       string    `json:"name"`
	Patronymic OptString `json:"patronymic"`
	CallSign   OptString `json:"callSign"`
	Gender     OptString `json:"gender"`
	Birthdate  OptDate   `json:"birthdate"`
	Vk         OptString `json:"vk"`
	Telegram   OptString `json:"telegram"`
	Email      OptString `json:"email"`
	Phone      OptString `json:"phone"`
	Approval   bool      `json:"approval"`
	Role       string    `json:"role"`
}

// GetID returns the value of ID.
func (s *User) GetID() string {
	return s.ID
}

// GetYandexId returns the value of YandexId.
func (s *User) GetYandexId() string {
	return s.YandexId
}

// GetSurname returns the value of Surname.
func (s *User) GetSurname() OptString {
	return s.Surname
}

// GetName returns the value of Name.
func (s *User) GetName() string {
	return s.Name
}

// GetPatronymic returns the value of Patronymic.
func (s *User) GetPatronymic() OptString {
	return s.Patronymic
}

// GetCallSign returns the value of CallSign.
func (s *User) GetCallSign() OptString {
	return s.CallSign
}

// GetGender returns the value of Gender.
func (s *User) GetGender() OptString {
	return s.Gender
}

// GetBirthdate returns the value of Birthdate.
func (s *User) GetBirthdate() OptDate {
	return s.Birthdate
}

// GetVk returns the value of Vk.
func (s *User) GetVk() OptString {
	return s.Vk
}

// GetTelegram returns the value of Telegram.
func (s *User) GetTelegram() OptString {
	return s.Telegram
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() OptString {
	return s.Email
}

// GetPhone returns the value of Phone.
func (s *User) GetPhone() OptString {
	return s.Phone
}

// GetApproval returns the value of Approval.
func (s *User) GetApproval() bool {
	return s.Approval
}

// GetRole returns the value of Role.
func (s *User) GetRole() string {
	return s.Role
}

// SetID sets the value of ID.
func (s *User) SetID(val string) {
	s.ID = val
}

// SetYandexId sets the value of YandexId.
func (s *User) SetYandexId(val string) {
	s.YandexId = val
}

// SetSurname sets the value of Surname.
func (s *User) SetSurname(val OptString) {
	s.Surname = val
}

// SetName sets the value of Name.
func (s *User) SetName(val string) {
	s.Name = val
}

// SetPatronymic sets the value of Patronymic.
func (s *User) SetPatronymic(val OptString) {
	s.Patronymic = val
}

// SetCallSign sets the value of CallSign.
func (s *User) SetCallSign(val OptString) {
	s.CallSign = val
}

// SetGender sets the value of Gender.
func (s *User) SetGender(val OptString) {
	s.Gender = val
}

// SetBirthdate sets the value of Birthdate.
func (s *User) SetBirthdate(val OptDate) {
	s.Birthdate = val
}

// SetVk sets the value of Vk.
func (s *User) SetVk(val OptString) {
	s.Vk = val
}

// SetTelegram sets the value of Telegram.
func (s *User) SetTelegram(val OptString) {
	s.Telegram = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val OptString) {
	s.Email = val
}

// SetPhone sets the value of Phone.
func (s *User) SetPhone(val OptString) {
	s.Phone = val
}

// SetApproval sets the value of Approval.
func (s *User) SetApproval(val bool) {
	s.Approval = val
}

// SetRole sets the value of Role.
func (s *User) SetRole(val string) {
	s.Role = val
}

func (*User) checkUserRes()   {}
func (*User) getUserByIdRes() {}
func (*User) getUserRes()     {}
func (*User) updateUserRes()  {}

// Ref: #/components/schemas/UsersResponse
type UsersResponse struct {
	TrackingId string `json:"trackingId"`
	Status     string `json:"status"`
	Data       []User `json:"data"`
}

// GetTrackingId returns the value of TrackingId.
func (s *UsersResponse) GetTrackingId() string {
	return s.TrackingId
}

// GetStatus returns the value of Status.
func (s *UsersResponse) GetStatus() string {
	return s.Status
}

// GetData returns the value of Data.
func (s *UsersResponse) GetData() []User {
	return s.Data
}

// SetTrackingId sets the value of TrackingId.
func (s *UsersResponse) SetTrackingId(val string) {
	s.TrackingId = val
}

// SetStatus sets the value of Status.
func (s *UsersResponse) SetStatus(val string) {
	s.Status = val
}

// SetData sets the value of Data.
func (s *UsersResponse) SetData(val []User) {
	s.Data = val
}

func (*UsersResponse) getUsersRes() {}
